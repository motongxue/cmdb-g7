syntax = "proto3";

package demo.book;
option go_package = "github.com/motongxue/cmdb-g7/apps/book";

// 根据-I=. 来指定req.proto文件所在位置
import "apps/book/pb/req.proto";

service Service {
    // package.struct 定义在外部依赖的引用 demo.book.req.CreateBookRequest -> CreateBookRequest
    // 引入外部依赖时要通过package来指定，但是如果package前缀部分相同，则可以省略相同前缀
    rpc CreateBook(CreateBookRequest) returns(Book);
    rpc QueryBook(QueryBookRequest) returns(BookSet);
    rpc DescribeBook(DescribeBookRequest) returns(Book);
    rpc UpdateBook(UpdateBookRequest) returns(Book);
    rpc DeleteBook(DeleteBookRequest) returns(Book);
}

// Book todo
message Book {
    // 唯一ID
    // @gotags: json:"id" bson:"_id"
    string id = 1;
    // 录入时间
    // @gotags: json:"create_at" bson:"create_at"
    int64 create_at = 2;
    // 更新时间
    // @gotags: json:"update_at" bson:"update_at"
    int64 update_at = 3;
    // 更新人
    // @gotags: json:"update_by" bson:"update_by"
    string update_by = 4;
    // 书本信息
    // @gotags: json:"data" bson:"data"
    CreateBookRequest data = 5;
}



// BookSet todo
message BookSet {
    // 分页时，返回总数量
    // @gotags: json:"total"
    int64 total = 1;
    // 一页的数据
    // @gotags: json:"items"
    repeated Book items = 2;
}

